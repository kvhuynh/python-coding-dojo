class User():
    def __init__(self, first_name, last_name, email, age):
        self.first_name = first_name
        self.last_name = last_name
        self.email = email
        self.age = age
        self.is_rewards_member = False
        self.gold_card_points = 0
        self.account_balance = BankAccount()

    def display_info(self):
        print(self.first_name)
        print(self.last_name)
        print(self.email)
        print(self.age)
        print(self.is_rewards_member)
        print(self.gold_card_points)
        return self

    def enroll(self):
        if self.is_rewards_member == True:
            print("User already a member")
        else:
            self.is_rewards_member = True
            self.gold_card_points = 200
        return self
    
    def spend_points(self, amount):
        if self.gold_card_points < amount:
            print("User does not have enough funds")
        else:
            self.gold_card_points = self.gold_card_points - amount
        return self

    def make_deposit(self, amount):
        self.account_balance.deposit(amount)
        return self

    def make_withdrawal(self, amount):
        self.account_balance.withdraw(amount)
        return self

    def display_user_balance(self):
        self.account_balance.display_account_info()
        return self

class BankAccount():

    all_accounts = []

    def __init__(self, interest_rate=0.01, balance=0):
        self.balance = balance
        self.interest_rate = interest_rate
        BankAccount.all_accounts.append(self)

    def deposit(self, amount):
        self.balance += amount
        return self

    def withdraw(self, amount):
        if self.balance < amount:
            print("Insufficient funds: Charging a $5 fee")
            self.balance -= 5
        else:
            self.balance -= amount
        return self

    def display_account_info(self):
        print(self.balance)
        return self

    def yield_interest(self):
        self.balance += self.balance * self.interest_rate
        return self

    @classmethod
    def print_bank_account(cls):
        for account in cls.all_accounts:
            account.display_account_info()
        
new_user = User("Kevin", "Huynh", "kvhuynh820@gmail.com")
new_user.make_deposit(500).make_withdrawal(200).display_user_balance()